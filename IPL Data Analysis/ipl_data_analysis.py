# -*- coding: utf-8 -*-
"""IPL Data Analysis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Umc4oDMbZi5P1h1Sw1sr7Ck77013H7XG
"""

import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt

pd.set_option('display.max_columns',None)
pd.set_option('display.max_rows',None)

dim_match_summary = pd.read_csv('/content/drive/MyDrive/Internships/MentorNess/Task 3 IPL Analysis/dim_match_summary.csv')
dim_match_summary.shape

dim_players = pd.read_csv('/content/drive/MyDrive/Internships/MentorNess/Task 3 IPL Analysis/dim_players.csv')
dim_players.shape

dim_players.shape

dim_players.rename(columns={'team':'winner'},inplace=True)
dim_players.head()

fact_bating_summary = pd.read_csv('/content/drive/MyDrive/Internships/MentorNess/Task 3 IPL Analysis/fact_bating_summary.csv')
fact_bating_summary.head()

fact_bowling_summary = pd.read_csv('/content/drive/MyDrive/Internships/MentorNess/Task 3 IPL Analysis/fact_bowling_summary.csv')
fact_bowling_summary.head()

fact_bowling_summary.rename(columns={
    'runs':'bowl_run',
    '0s':'bowl_0s',
    '4s':'bowl_4s',
    '6s':'bowl_6s'
},inplace=True)
fact_bating_summary.rename(columns={
    'runs':'bat_run',
    '4s':'bat_4s',
    '6s':'bat_6s'
},inplace=True)

fact_bating_summary.duplicated().sum()
fact_bating_summary.drop_duplicates(inplace=True)
fact_bowling_summary.drop_duplicates(inplace=True)
result = pd.concat([fact_bating_summary, fact_bowling_summary], axis=1, join="inner")
result.shape

duplicate_cols = result.columns[result.columns.duplicated()]
result.drop(columns=duplicate_cols, inplace=True)
result.shape

result.head()

result = dim_match_summary.merge(dim_players, on='winner')
result.shape

result.columns

fact_bowling_summary.columns

result = result.merge(fact_bating_summary, on='match_id')
result.shape

result = result.merge(fact_bowling_summary, on='match_id')
result.shape

result.head()

sns.countplot(x=dim_players['battingStyle'],hue=dim_players['battingStyle'])
plt.title('Batting Style of Players')
plt.show()

plt.figure(figsize=(10,6))
sns.scatterplot(x=dim_match_summary['team1'],y=dim_match_summary['team2'], hue=[])
plt.title('Matches held between Teams')
plt.xlabel(None)
plt.ylabel(None)
plt.show()

plt.figure(figsize=(10,6))
sns.countplot(x=dim_players['winner'])
plt.title('Total no of players in Teams')
plt.xlabel(None)
plt.ylabel(None)
plt.show()

plt.figure(figsize=(10,6))
sns.countplot(x=dim_players['playingRole'])
plt.xticks(rotation=45)
plt.title('No. of Players with Different Roles')
plt.xlabel(None)
plt.ylabel(None)
plt.show()

plt.figure(figsize=(10,6))
sns.countplot(x=dim_match_summary['winner'], hue=dim_match_summary['winner'], order=dim_match_summary['winner'].value_counts().index)
plt.xticks(rotation=45)
plt.title('Winner count of Teams')
plt.xlabel(None)
plt.ylabel(None)
plt.show()

csk = dim_players[dim_players['winner']== 'Super Kings']
plt.figure(figsize=(10,6))
sns.countplot(x=csk['battingStyle'], hue=csk['battingStyle'])
plt.yticks(np.arange(0, 20, 2))
plt.title('No. of Players with Different Roles in Team CSK')
plt.xlabel(None)
plt.ylabel(None)
plt.show()

plt.figure(figsize=(15,8))
csk = dim_players[dim_players['winner']== 'Super Kings']
sns.countplot(x=csk['bowlingStyle'], hue=csk['bowlingStyle'])
plt.yticks(np.arange(0, 20, 2))
plt.xticks(rotation=45)
plt.title('No. of Players with Different Roles in Team CSK')
plt.xlabel(None)
plt.ylabel(None)
plt.show()

info = fact_bowling_summary.groupby(['bowlingTeam','bowlerName'])['wickets'].sum().sort_values(ascending=False)
info